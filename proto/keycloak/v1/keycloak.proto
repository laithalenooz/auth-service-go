syntax = "proto3";

package keycloak.v1;

option go_package = "github.com/laithalenooz/auth-service-go/gen/keycloak/v1;keycloakv1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// KeycloakService provides operations for user management and token validation
service KeycloakService {
  // User Management Operations
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);

  // Authentication Operations
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Logout(LogoutRequest) returns (google.protobuf.Empty);
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc ResetPassword(ResetPasswordRequest) returns (google.protobuf.Empty);

  // Token Operations
  rpc IntrospectToken(IntrospectTokenRequest) returns (IntrospectTokenResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);

  // Health Check
  rpc HealthCheck(google.protobuf.Empty) returns (HealthCheckResponse);
}

// User Management Messages
message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string first_name = 4;
  string last_name = 5;
  bool enabled = 6;
  bool email_verified = 7;
  google.protobuf.Timestamp created_timestamp = 8;
  map<string, string> attributes = 9;
  repeated string groups = 10;
  repeated string roles = 11;
}

message CreateUserRequest {
  string realm_name = 1;
  string client_id = 2;
  string client_secret = 3;
  string username = 4;
  string email = 5;
  string first_name = 6;
  string last_name = 7;
  string password = 8;
  bool enabled = 9;
  bool email_verified = 10;
  map<string, string> attributes = 11;
  repeated string groups = 12;
  repeated string roles = 13;
}

message CreateUserResponse {
  User user = 1;
}

// Authentication Messages
message LoginRequest {
  string realm_name = 1;
  string username = 2;
  string password = 3;
  string client_id = 4;
  string client_secret = 5;
  repeated string scope = 6;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
  string token_type = 3;
  int32 expires_in = 4;
  int32 refresh_expires_in = 5;
  string scope = 6;
  User user = 7;
}

message LogoutRequest {
  string realm_name = 1;
  string refresh_token = 2;
  string client_id = 3;
  string client_secret = 4;
}

message GetUserRequest {
  string realm_name = 1;
  string client_id = 2;
  string client_secret = 3;
  string user_id = 4;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string realm_name = 1;
  string client_id = 2;
  string client_secret = 3;
  string user_id = 4;
  string username = 5;
  string email = 6;
  string first_name = 7;
  string last_name = 8;
  bool enabled = 9;
  bool email_verified = 10;
  map<string, string> attributes = 11;
  repeated string groups = 12;
  repeated string roles = 13;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string realm_name = 1;
  string client_id = 2;
  string client_secret = 3;
  string user_id = 4;
}

message ListUsersRequest {
  string realm_name = 1;
  string client_id = 2;
  string client_secret = 3;
  int32 page = 4;
  int32 page_size = 5;
  string search = 6;
  string email = 7;
  string username = 8;
}

message ListUsersResponse {
  repeated User users = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 page_size = 4;
}

// Token Operations Messages
message IntrospectTokenRequest {
  string realm_name = 1;
  string client_id = 2;
  string client_secret = 3;
  string token = 4;
  string token_type_hint = 5;
}

message IntrospectTokenResponse {
  bool active = 1;
  string client_id = 2;
  string username = 3;
  string token_type = 4;
  int64 exp = 5;
  int64 iat = 6;
  int64 nbf = 7;
  string sub = 8;
  string aud = 9;
  string iss = 10;
  string jti = 11;
  repeated string scope = 12;
  map<string, string> extra = 13;
}

message RefreshTokenRequest {
  string realm_name = 1;
  string refresh_token = 2;
  string client_id = 3;
  string client_secret = 4;
}

message RefreshTokenResponse {
  string access_token = 1;
  string refresh_token = 2;
  string token_type = 3;
  int32 expires_in = 4;
  int32 refresh_expires_in = 5;
  string scope = 6;
}

// Registration Messages
message RegisterRequest {
  string realm_name = 1;
  string client_id = 2;
  string client_secret = 3;
  string username = 4;
  string email = 5;
  string first_name = 6;
  string last_name = 7;
  string password = 8;
  bool email_verified = 9;
  map<string, string> attributes = 10;
}

message RegisterResponse {
  string user_id = 1;
  string username = 2;
  string email = 3;
  string first_name = 4;
  string last_name = 5;
  bool enabled = 6;
  bool email_verified = 7;
  google.protobuf.Timestamp created_timestamp = 8;
}

// Password Reset Messages
message ResetPasswordRequest {
  string realm_name = 1;
  string username = 2;
  string email = 3;
  string client_id = 4;
  string client_secret = 5;
  string redirect_uri = 6;
}

// Health Check Messages
message HealthCheckResponse {
  string status = 1;
  google.protobuf.Timestamp timestamp = 2;
  map<string, string> dependencies = 3;
}